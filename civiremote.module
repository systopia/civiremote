<?php

use Drupal\civiremote;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Url;
use Drupal\user\UserInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_entity_insert().
 */
function civiremote_entity_insert(EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'user') {
    /* @var UserInterface $entity */
    civiremote\User::create($entity);
  }
}

/**
 * Implements hook_user_login().
 */
function civiremote_user_login(UserInterface $account) {
  // Synchronise user roles with CiviRemote roles retrieved from CiviCRM.
  try {
    civiremote\User::synchroniseRoles($account);
  }
  catch (Exception $exception) {
    user_logout();
    Drupal::messenger()->addError(
      t('Could not complete login. Please try again later or contact the site administrator.')
    );
    $url = Url::fromRoute('<front>')->toString();
    $response = new RedirectResponse($url);
    $response->send();
  }
}

/**
 * Implements hook_entity_base_field_info().
 */
function civiremote_entity_base_field_info(EntityTypeInterface $entity_type) {
  // Add a base field to the User entity for storing the CiviRFemote ID.
  $fields = [];

  if ($entity_type->id() === 'user') {
    $fields['civiremote_id'] = BaseFieldDefinition::create('string')
      ->setLabel(t('CiviRemote ID'))
      ->setDescription(t('The unique CiviRemote ID for the user in the connected CiviCRM.'))
      ->setDisplayOptions('view', [
        'label' => 'visible',
        'type' => 'string',
        'weight' => -5,
      ])
      ->setDisplayConfigurable('view', TRUE)
      ->setDisplayOptions('form', [
        'type' => 'string_textfield',
        'settings' => [
          'display_label' => TRUE,
        ],
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setRequired(FALSE);
  }

  return $fields;
}
